// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-plugin-react-query-string-key-gen Generate uuid key if queryFn name cannot be inferred: Generate uuid key if queryFn name cannot be inferred 1`] = `

useQuery([{id: 2}], async () => [1, 2, id]);

useQuery([], () => {
  return Promise.resolve('hello');
});

useQuery('', () => {
  return new Promise((res) => res('hello world'));
});

      ↓ ↓ ↓ ↓ ↓ ↓

useQuery(
  [
    'mock-nanoid',
    {
      id: 2,
    },
  ],
  async () => [1, 2, id]
);
useQuery(['mock-nanoid'], () => {
  return Promise.resolve('hello');
});
useQuery('mock-nanoid', () => {
  return new Promise((res) => res('hello world'));
});


`;

exports[`babel-plugin-react-query-string-key-gen Infer queryFn name from async/await function block: Infer queryFn name from async/await function block 1`] = `

useQuery(
  [{param1: 'abc'}],
  async () => {
    const blah = 'hello';
    const someOtherStuff = calculate();
    const result = await batchGetProductSwapList(productNumbers, idToken);
    return result;
  },
  { enabled: true }
);

      ↓ ↓ ↓ ↓ ↓ ↓

useQuery(
  [
    'batchGetProductSwapList',
    {
      param1: 'abc',
    },
  ],
  async () => {
    const blah = 'hello';
    const someOtherStuff = calculate();
    const result = await batchGetProductSwapList(productNumbers, idToken);
    return result;
  },
  {
    enabled: true,
  }
);


`;

exports[`babel-plugin-react-query-string-key-gen adds missing queryFn args to array key in params function signature: adds missing queryFn args to array key in params function signature 1`] = `

useQuery([], () => fetchTodos(id));

      ↓ ↓ ↓ ↓ ↓ ↓

useQuery(['fetchTodos', id], () => fetchTodos(id));


`;

exports[`babel-plugin-react-query-string-key-gen adds string key to the start of array queryKey: adds string key to the start of array queryKey 1`] = `

useQuery([{id: 2}], () => getTodos());

      ↓ ↓ ↓ ↓ ↓ ↓

useQuery(
  [
    'getTodos',
    {
      id: 2,
    },
  ],
  () => getTodos()
);


`;

exports[`babel-plugin-react-query-string-key-gen ignores function calls that are not useQuery: ignores function calls that are not useQuery 1`] = `

useSomethingElse([{id: 2}], () => getTodos());
useQueryObject({queryFn: 'hello', queryKey: 'helloWorld', options: {}});
callMe(1, 2, 3);

      ↓ ↓ ↓ ↓ ↓ ↓

useSomethingElse(
  [
    {
      id: 2,
    },
  ],
  () => getTodos()
);
useQueryObject({
  queryFn: 'hello',
  queryKey: 'helloWorld',
  options: {},
});
callMe(1, 2, 3);


`;
